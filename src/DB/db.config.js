// Generated by Copilot
// MongoDB Configuration for different environments

require('dotenv').config();

module.exports = {
  development: {
    uri: process.env.MONGODB_URI || 'mongodb://localhost:27017/project_management_dev',
    options: {
      maxPoolSize: 10,
      minPoolSize: 2,
      maxIdleTimeMS: 30000,
      serverSelectionTimeoutMS: 5000,
      socketTimeoutMS: 45000,
      useNewUrlParser: true,
      useUnifiedTopology: true,
    },
    database: 'project_management_dev'
  },
  
  test: {
    uri: process.env.MONGODB_TEST_URI || 'mongodb://localhost:27017/project_management_test',
    options: {
      maxPoolSize: 5,
      minPoolSize: 1,
      maxIdleTimeMS: 30000,
      serverSelectionTimeoutMS: 5000,
      socketTimeoutMS: 45000,
      useNewUrlParser: true,
      useUnifiedTopology: true,
    },
    database: 'project_management_test'
  },
  
  production: {
    uri: process.env.MONGODB_URI,
    options: {
      maxPoolSize: 20,
      minPoolSize: 5,
      maxIdleTimeMS: 30000,
      serverSelectionTimeoutMS: 5000,
      socketTimeoutMS: 45000,
      heartbeatFrequencyMS: 10000,
      useNewUrlParser: true,
      useUnifiedTopology: true,
      // Additional production settings
      retryWrites: true,
      w: 'majority',
      readPreference: 'primary',
      compressors: ['zlib'],
    },
    database: process.env.MONGODB_DATABASE || 'project_management'
  }
};

// Helper function to get config by environment
const getConfig = (env = process.env.NODE_ENV || 'development') => {
  return module.exports[env] || module.exports.development;
};

module.exports.getConfig = getConfig;