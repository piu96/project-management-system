const { body, param } = require('express-validator');

class WorkspaceValidator {
    // Create workspace validation
    createWorkspaceValidation = [
        body('name')
            .trim()
            .isLength({ min: 2, max: 50 })
            .withMessage('Workspace name must be between 2 and 50 characters')
            .matches(/^[a-zA-Z0-9\s\-_]+$/)
            .withMessage('Workspace name can only contain letters, numbers, spaces, hyphens, and underscores'),

        body('description')
            .optional()
            .trim()
            .isLength({ max: 200 })
            .withMessage('Description cannot exceed 200 characters'),

        body('plan')
            .optional()
            .isIn(['free', 'premium', 'enterprise'])
            .withMessage('Plan must be free, premium, or enterprise')
    ];

    // Update workspace validation
    updateWorkspaceValidation = [
        param('workspaceId')
            .isMongoId()
            .withMessage('Invalid workspace ID'),

        body('name')
            .optional()
            .trim()
            .isLength({ min: 2, max: 50 })
            .withMessage('Workspace name must be between 2 and 50 characters')
            .matches(/^[a-zA-Z0-9\s\-_]+$/)
            .withMessage('Workspace name can only contain letters, numbers, spaces, hyphens, and underscores'),

        body('description')
            .optional()
            .trim()
            .isLength({ max: 200 })
            .withMessage('Description cannot exceed 200 characters'),

        body('settings')
            .optional()
            .isObject()
            .withMessage('Settings must be an object'),

        body('settings.allowPublicJoin')
            .optional()
            .isBoolean()
            .withMessage('allowPublicJoin must be boolean'),

        body('settings.requireApproval')
            .optional()
            .isBoolean()
            .withMessage('requireApproval must be boolean'),

        body('settings.allowGuestAccess')
            .optional()
            .isBoolean()
            .withMessage('allowGuestAccess must be boolean')
    ];

    // Workspace ID validation
    workspaceIdValidation = [
        param('workspaceId')
            .isMongoId()
            .withMessage('Invalid workspace ID')
    ];

    // Invite member validation
    inviteMemberValidation = [
        param('workspaceId')
            .isMongoId()
            .withMessage('Invalid workspace ID'),

        body('role')
            .optional()
            .isIn(['team_member', 'workspace_admin', 'project_manager'])
            .withMessage('Role must be team_member, workspace_admin, or project_manager')
    ];
}

module.exports = new WorkspaceValidator();

// Generated by Copilot
