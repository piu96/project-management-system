const express = require('express');
const workspaceController = require('./workspace.controller');
const workspaceValidator = require('./workspace.validator');
const authMiddleware = require('../auth/auth.middleware');

class WorkspaceRoutes {
    constructor() {
        this.router = express.Router();
        this.initializeRoutes();
    }

    initializeRoutes() {
        // Create workspace
        this.router.post('/',
            authMiddleware.authenticateToken,
            workspaceValidator.createWorkspaceValidation,
            workspaceController.createWorkspaceHandler
        );

        // Get user workspaces
        this.router.get('/',
            authMiddleware.authenticateToken,
            workspaceController.getUserWorkspacesHandler
        );

        // Get workspace details
        this.router.get('/:workspaceId',
            authMiddleware.authenticateToken,
            workspaceValidator.workspaceIdValidation,
            workspaceController.getWorkspaceDetailsHandler
        );

        // Update workspace
        this.router.put('/:workspaceId',
            authMiddleware.authenticateToken,
            workspaceValidator.updateWorkspaceValidation,
            workspaceController.updateWorkspaceHandler
        );

        // Get workspace members
        this.router.get('/:workspaceId/members',
            authMiddleware.authenticateToken,
            workspaceValidator.workspaceIdValidation,
            workspaceController.getWorkspaceMembersHandler
        );

        // Generate invitation link
        this.router.post('/:workspaceId/invite',
            authMiddleware.authenticateToken,
            workspaceValidator.inviteMemberValidation,
            workspaceController.generateInviteLinkHandler
        );

        // Join workspace by invite token
        this.router.post('/join/:inviteToken',
            authMiddleware.authenticateToken,
            workspaceController.joinWorkspaceByInviteHandler
        );
    }

    getRouter() {
        return this.router;
    }
}

module.exports = new WorkspaceRoutes().getRouter();

// Generated by Copilot
