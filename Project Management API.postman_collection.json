{
  "info": {
    "name": "Project Management API - Complete Collection",
    "description": "Comprehensive API collection for Project Management Application\n\n**Features Demonstrated:**\n- Multi-tenant SaaS architecture\n- Advanced time tracking & progress analytics\n- Role-based access control\n- Real-time notifications\n- Dashboard analytics\n\n**Technical Highlights:**\n- 40+ RESTful endpoints\n- JWT authentication\n- Complex database relationships\n- Enterprise-level features\n\n**Created by:** Sutrishna for Final Evaluation Assignment\n**Generated by:** Copilot",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "workspace_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "project_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "task_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Sutrishna Demo\",\n  \"email\": \"sutrishna@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"confirmPassword\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.globals.set('jwt_token', response.token);",
                  "    pm.test('Token saved', function () {",
                  "        pm.expect(response.token).to.not.be.undefined;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"sutrishna@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login user and get JWT token"
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Get current user profile information"
          }
        }
      ],
      "description": "User authentication endpoints"
    },
    {
      "name": "üè¢ Workspace Management",
      "item": [
        {
          "name": "Create Workspace",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.globals.set('workspace_id', response.workspace._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Demo Company\",\n  \"description\": \"Demonstration workspace for interview\",\n  \"settings\": {\n    \"allowGuestAccess\": false,\n    \"defaultProjectVisibility\": \"private\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/workspaces",
              "host": ["{{base_url}}"],
              "path": ["workspaces"]
            },
            "description": "Create a new workspace (organization)"
          }
        },
        {
          "name": "Get User Workspaces",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/workspaces",
              "host": ["{{base_url}}"],
              "path": ["workspaces"]
            },
            "description": "Get all workspaces for current user"
          }
        },
        {
          "name": "Get Workspace Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/workspaces/{{workspace_id}}",
              "host": ["{{base_url}}"],
              "path": ["workspaces", "{{workspace_id}}"]
            },
            "description": "Get specific workspace details"
          }
        }
      ],
      "description": "Multi-tenant workspace management"
    },
    {
      "name": "üìÅ Project Management",
      "item": [
        {
          "name": "Create Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.globals.set('project_id', response.project._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Interview Demo Project\",\n  \"description\": \"Showcase project for technical interview\",\n  \"startDate\": \"2025-08-17\",\n  \"endDate\": \"2025-08-31\",\n  \"status\": \"active\",\n  \"priority\": \"high\",\n  \"budget\": {\n    \"total\": 50000,\n    \"currency\": \"USD\"\n  },\n  \"members\": []\n}"
            },
            "url": {
              "raw": "{{base_url}}/projects?workspaceId={{workspace_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspace_id}}"
                }
              ]
            },
            "description": "Create a new project in workspace"
          }
        },
        {
          "name": "Get Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/projects?workspaceId={{workspace_id}}",
              "host": ["{{base_url}}"],
              "path": ["projects"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspace_id}}"
                }
              ]
            },
            "description": "Get all projects in workspace"
          }
        },
        {
          "name": "Get Project Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/projects/{{project_id}}/analytics",
              "host": ["{{base_url}}"],
              "path": ["projects", "{{project_id}}", "analytics"]
            },
            "description": "Get detailed project analytics and metrics"
          }
        }
      ],
      "description": "Project lifecycle management"
    },
    {
      "name": "‚úÖ Task Management",
      "item": [
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.globals.set('task_id', response.task._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement API Documentation\",\n  \"description\": \"Create comprehensive API documentation for interview\",\n  \"projectId\": \"{{project_id}}\",\n  \"priority\": \"high\",\n  \"status\": \"todo\",\n  \"type\": \"feature\",\n  \"estimatedHours\": 8,\n  \"dueDate\": \"2025-08-20\",\n  \"tags\": [\"documentation\", \"api\"],\n  \"customFields\": {\n    \"complexity\": \"medium\",\n    \"category\": \"development\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/tasks",
              "host": ["{{base_url}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task with custom fields"
          }
        },
        {
          "name": "Get Project Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tasks?projectId={{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "projectId",
                  "value": "{{project_id}}"
                }
              ]
            },
            "description": "Get all tasks for a project"
          }
        },
        {
          "name": "Update Task Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"in_progress\",\n  \"actualHours\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/tasks/{{task_id}}",
              "host": ["{{base_url}}"],
              "path": ["tasks", "{{task_id}}"]
            },
            "description": "Update task status and progress"
          }
        }
      ],
      "description": "Comprehensive task management"
    },
    {
      "name": "‚è±Ô∏è Time Tracking",
      "item": [
        {
          "name": "Start Timer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"taskId\": \"{{task_id}}\",\n  \"description\": \"Working on API documentation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/time-tracking/start",
              "host": ["{{base_url}}"],
              "path": ["time-tracking", "start"]
            },
            "description": "Start timer for a task"
          }
        },
        {
          "name": "Stop Timer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"taskId\": \"{{task_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/time-tracking/stop",
              "host": ["{{base_url}}"],
              "path": ["time-tracking", "stop"]
            },
            "description": "Stop active timer"
          }
        },
        {
          "name": "Get Time Entries",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/time-tracking/entries?projectId={{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["time-tracking", "entries"],
              "query": [
                {
                  "key": "projectId",
                  "value": "{{project_id}}"
                }
              ]
            },
            "description": "Get time entries for project"
          }
        }
      ],
      "description": "Advanced time tracking with timer functionality"
    },
    {
      "name": "üìä Progress Analytics",
      "item": [
        {
          "name": "Get Project Progress",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/progress-tracking/project/{{project_id}}",
              "host": ["{{base_url}}"],
              "path": ["progress-tracking", "project", "{{project_id}}"]
            },
            "description": "Get comprehensive project progress analytics"
          }
        },
        {
          "name": "Get Burndown Chart",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/progress-tracking/project/{{project_id}}/burndown",
              "host": ["{{base_url}}"],
              "path": ["progress-tracking", "project", "{{project_id}}", "burndown"]
            },
            "description": "Get burndown chart data for project"
          }
        },
        {
          "name": "Get Velocity Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/progress-tracking/project/{{project_id}}/velocity",
              "host": ["{{base_url}}"],
              "path": ["progress-tracking", "project", "{{project_id}}", "velocity"]
            },
            "description": "Get team velocity and productivity metrics"
          }
        }
      ],
      "description": "Advanced progress tracking and analytics"
    },
    {
      "name": "üìà Dashboard Analytics",
      "item": [
        {
          "name": "Get Dashboard Overview",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/dashboard/overview?workspaceId={{workspace_id}}",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "overview"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspace_id}}"
                }
              ]
            },
            "description": "Get comprehensive dashboard overview"
          }
        },
        {
          "name": "Get Workspace Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/dashboard/analytics?workspaceId={{workspace_id}}",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "analytics"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspace_id}}"
                }
              ]
            },
            "description": "Get detailed workspace analytics"
          }
        }
      ],
      "description": "Business intelligence and reporting"
    },
    {
      "name": "üîî Notifications",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications",
              "host": ["{{base_url}}"],
              "path": ["notifications"]
            },
            "description": "Get user notifications"
          }
        },
        {
          "name": "Mark as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/mark-read",
              "host": ["{{base_url}}"],
              "path": ["notifications", "mark-read"]
            },
            "description": "Mark notifications as read"
          }
        }
      ],
      "description": "Real-time notification system"
    }
  ]
}
